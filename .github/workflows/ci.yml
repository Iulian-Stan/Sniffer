name: Continuous Integration (build & test)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Artifact_Name: NetworkSniffer
      Project_Name: NetworkSniffer.csproj

    steps:

    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test

    # Restore the application (install nuget packages)
    - name: Restore the application
      run: msbuild $env:Project_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Build the application
    - name: Build the application
      run: msbuild $env:Project_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Upload the artifacts
    - name: Upload build archive
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.Artifact_Name }}-${{ env.Configuration }}
        path: bin/${{ env.Configuration }}/net8.0-windows7.0/
      env:
        Configuration: ${{ matrix.configuration }}
